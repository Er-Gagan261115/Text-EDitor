{"version":3,"sources":["components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","style","border","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","changemode1","backgroundColor","color","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","value","onChange","event","target","rows","newtext","toUpperCase","split","length","defaultProps","App","cmode","changMode","e","document","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.507f2c5e.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import  {Link}  from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    function changetheme(){\r\n        if(props.mode=== \"blue\"||props.mode=== \"yellow\"){\r\nreturn \"dark\";\r\n        }\r\n        else \r\n        return \"light\"; \r\n    }\r\n    const changecolor = ()=>{\r\n        if(props.mode=== \"blue\"){\r\n          return \"primary\";\r\n        }\r\n        else if(props.mode=== \"yellow\")\r\n        {\r\n            return \"warning\"\r\n        }\r\n        else \r\n        return \"light\"; \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}> */}\r\n            <nav className={`navbar navbar-expand-lg navbar-${changetheme} bg-${changecolor}`} style = {{border: \"2px solid black\"}}>\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                        </li>\r\n                       \r\n                    </ul>\r\n\r\n                </div>\r\n            </div>\r\n            {/* <div className=\"form-check form-switch\">\r\n                    <input className=\"form-check-input\" type=\"checkbox\" onClick={props.changemode} role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n                </div> */}\r\n            <button type=\"button\" onClick={() => { props.changemode1('blue') }} style={{ backgroundColor: 'blue' }} className=\"btn btn-primary mx-2\">Blue</button>\r\n            <button type=\"button\" onClick={() => { props.changemode1('yellow') }} style={{ backgroundColor: 'yellow', color: 'black' }} className=\"btn btn-primary mx-2\">Yellow</button>\r\n            <button type=\"button\" onClick={() => { props.changemode1('white') }} style={{ backgroundColor: 'white', color: 'black' }} className=\"btn btn-primary mx-2\">default</button>\r\n\r\n\r\n\r\n        </nav>\r\n        </div >\r\n    )\r\n}\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired\r\n}\r\nNavbar.defaultProps = {\r\n    title: \"set title\"\r\n}\r\n","import React,{useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    // setText(\"newText\");\r\n    const handleonchange = (event)=>{\r\n        // console.log(\"on change\")\r\n        setText(\r\n            event.target.value\r\n        )\r\n    }\r\n    const handleonclick = ()=>{\r\n        // console.log(\"changed change\")\r\n        var newtext = text.toUpperCase();\r\n        setText(newtext);\r\n        \r\n    }\r\n   \r\n    const[text,setText] = useState(\"\")\r\n    return (\r\n        <>\r\n        <div>\r\n   <h1>{props.text}</h1>\r\n<div className=\"mb-3\" >\r\n  \r\n  <textarea className=\"form-control\" value = {text} style = {{backgroundColor: 'white'}}  onChange = {handleonchange} id=\"box\" rows=\"3\"></textarea>\r\n  \r\n</div>\r\n<button className=\"btn btn-primary\" onClick={handleonclick}>\r\n    convert text\r\n</button>\r\n</div>\r\n<div className=\"container\">\r\n    <h3>word counter</h3>\r\n    <p> {text.split(\" \").length} words and {text.length} letters</p>\r\n    <h2>preview</h2>\r\n    <p>{text}</p>\r\n</div>\r\n</>\r\n  )\r\n}\r\n","\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n// import Lightdarkmode from \"./components/Lightdarkmode\";\n// import About from './components/About'\nimport React, { useState } from 'react'\n// import { ReactDOM } from 'react-dom';\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [cmode, changMode] = useState('white')\n  const changemode = (e) => {\n    changMode(e)\n    if (e === 'blue') {\n      // changMode('blue');\n      document.body.style.backgroundColor = e;\n    }\n    else if (e === \"yellow\") {\n      // changMode('yellow');\n      document.body.style.backgroundColor = e;\n    }\n    else if (e === \"white\") {\n\n      // changMode('white');\n      document.body.style.backgroundColor = e;\n    }\n  }\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar title=\"Text-Editor\" mode={cmode} changemode1={changemode}/>\n            <div className=\"container my-3\">\n        {/* <Switch> */}\n          {/* <Route exact path=\"/\" > */}\n              <TextForm text=\"Enter the text\" mode={cmode} />\n              \n          {/* </Route> */}\n          {/* <Route  path=\"/about\" > */}\n            {/* <About /> */}\n          {/* </Route> */}\n        {/* </Switch> */}\n            </div>\n        {/* </Router> */}\n        {/* we made a component in nav and here just returning nav so as there should be clean code */}\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}